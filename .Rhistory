teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
listExample$student
listExample$`學期` # 特殊命名依然要用反頓點呼叫
listExample[["student"]]
listExample$student
listExample[["學期"]] # 小心不是反頓點喔。
listExample$`學期`
student <- "student"
listExample[[student]]
fromJSON("http://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000157-002",
simplifyDataFrame = F) -> newTaipeiCityVaccine
View(newTaipeiCityVaccine)
name(newTaipeiCityVaccine)
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
name(listExample)
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
names(listExample)
names(newTaipeiCityVaccine)
length(newTaipeiCityVaccine)
names(newTaipeiCityVaccine)
length(newTaipeiCityVaccine)
str(newTaipeiCityVaccine)
View(newTaipeiCityVaccine)
str(newTaipeiCityVaccine[["success"]])
str(newTaipeiCityVaccine[[1]])
str(newTaipeiCityVaccine$success)
str(newTaipeiCityVaccine[["success"]])
str(newTaipeiCityVaccine[[1]])
str(newTaipeiCityVaccine$success)
names(listExample)
# 有多少位置可選：
length(listExample)
vectorExample
vectorExample
vectorExample[c(1,3)]
vectorExample[c(3,2,1)] # 產生重新排列效果
vectorExample[[1]]
vectorExample[[3]]
Sys.setlocale(category = "LC_ALL", locale = "cht")
vectorExample[[1]]
vectorExample[[3]]
vectorExample
vectorExample[c(1,3)]
vectorExample[c(3,2,1)] # 產生重新排列效果
# 顯示到第一層
str(listExample, max.level=1)
listExample[c(1,2)]
listExample[c(1,2), max.level=1]
# 顯示到第一層
str(listExample, max.level=1)
listExample[c(1,2), max.level=1]
str(listExample[c(1,2), max.level=1])
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[c(1,2)], max.level=1)
str(listExample[c(2,1)], max.level=1)
# 顯示到第一層
str(listExample, max.level=1)
listExample[c("學期")]
listExample[c("student","學期")]
str(listExample[c(1,2)], max.level=1)
str(listExample[c(1,2)], max.level=1)
str(listExample[c(2,1)], max.level=1)
listExample[c("學期")]
# 顯示到第一層
str(listExample, max.level=1)
listExample[["學期"]]
listExample[c("student","學期")]
listExample[["學期"]]
listExample[c("student","學期")]
str(listExample[["學期"]])
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[["學期"]])
listExample[["學期"]]
listExample[c("student","學期")]
listExample[["學期"]]
str(listExample[["學期"]])
listExample[["學期"]]
vectorExample
vectorExample[c(T,T,F)] # 要，要，不要
names(taipeiNightMarkets)
fromJSON("https://www.dropbox.com/s/qnm9bnz7vccrvcz/taipeiNightMarkets.json?dl=1", simplifyDataFrame = F) -> taipeiNightMarkets
names(taipeiNightMarkets)
taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)]
str(taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)])
taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,F,T), max.level=1]
str(taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)], max.level=1)
names(taipeiNightMarkets)
str(taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)], max.level=1)
Sys.setlocale(category = "LC_ALL", locale = "cht")
str(taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)], max.level=1)
c(T,F,F,F,T,F,F,F,F,T,F,F,F,T) <- selectmarket
c(T,F,F,F,T,F,F,F,F,T,F,F,F,T) -> selectmarket
taipeiNightMarkets[selectmarket]
str(taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)], max.level=1)
taipeiNightMarkets[selectmarket]
c(T,F,F,F,T,F,F,F,F,T,F,F,F,T) -> selectedmarket
taipeiNightMarkets[selectedmarket]
str(taipeiNightMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)], max.level=1)
selectedmarket <- rep(F,14)
selectedmarket[c(1,5,10,14)] <- TRUE
selectedmarket <- rep(F,14)
print(selectedmarket)
selectedmarket[c(1,5,10,14)] <- TRUE
print(selectedmarket)
selectedmarket
str(taipeiNightMarkets[[selectedmarket]], max.level=1)
str(taipeiNightMarkets[selectedmarket], max.level=1)
str(get1,max.level = 1)
get1 <- listExample[["學期"]]
get2 <- listExample["學期"]
get1 # 學期拿出來，有3個元素的list
str(get1,max.level = 1)
#get1 # 學期拿出來，有3個元素的list
str(get1,max.level = 1)
str(get2,max.level = 1)
numVector <- c(2,3,6,-1,4,2,6)
select1 <- numVector[c(1,4)]; select1
select2 <- select1[[1]]; select2
# 相當於
numVector[c(1,4)][[1]]
select1 <- numVector[c(T,T,F,T,F,F,T)]; select1
select2 <- select1[c(1,4)]; select2
econonly <- majors[c(T,T,F,F,T)]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econonly <- majors[c(T,T,F,F,T)]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econonly <- majors[c(T,T,F,F,T)]
names[econonly]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econonly <- majors[c(T,T,F,F,T)];econonly
names[econonly]
ecofemaleonly <- gender[c(T,T,F,T,F)];ecofemaleonly
names[econonly][ecofemaleonly]
Sys.setlocale(category = "LC_ALL", locale = "cht")
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econonly <- majors[c(T,T,F,F,T)];econonly
names[econonly]
ecofemaleonly <- gender[c(T,T,F,T,F)];ecofemaleonly
names[econonly][ecofemaleonly]
econonly<-c(T,T,F,F,T)
econonly_names<-names[econonly]; econonly_names
econonly_gender<-gender[econonly];econonly_gender
econFemaleOnly<-c(T,T,F)
econFemaleOnly_names<-econonly_names[econFemaleOnly]; econFemaleOnly_names
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econonly <- majors[c(T,T,F,F,T)];econonly
names[econonly]
ecofemaleonly <- gender[c(T,T,F,T,F)];ecofemaleonly
names[econonly][ecofemaleonly];names
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econonly <- majors[c(T,T,F,F,T)];econonly
names[econonly];gender[econonly]
ecofemaleonly <- gender[c(1,2)];ecofemaleonly
names[econonly][c(1,2)]
econOnly <- c(T,T,F,F,T); econOnly
names[econOnly];gender[econOnly]
econFemaleOnly <- gender[econOnly][c(1,2)] ; econFemaleOnly
names[econOnly][c(1,2)]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econonly <- majors[c(T,T,F,F,T)];econonly
names[econonly];gender[econonly]
ecofemaleonly <- gender[c(1,2)];ecofemaleonly
names[econonly][c(1,2)]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
econonly <- majors[c(T,T,F,F,T)];econonly
names[econonly];gender[econonly]
ecofemaleonly <- gender[econonly][c(1,2)];ecofemaleonly
names[econonly][c(1,2)]
econonly <- majors[c(T,T,F,F,T)];econonly
names[econonly];gender[econonly]
ecofemaleonly <- gender[c(1,2)];ecofemaleonly
names[econonly][c(1,2)]
econOnly <- c(T,T,F,F,T); econOnly
names[econOnly];gender[econOnly]
econonly <- majors[c(T,T,F,F,T)];econonly
names[econonly];gender[econonly]
econonly <- c(T,T,F,F,T);econonly
names[econonly];gender[econonly]
econonly <- majors[c(T,T,F,F,T)];econonly
names[econonly];gender[econonly]
ecofemaleonly <- gender[c(1,2)];ecofemaleonly
names[econonly][c(1,2)]
econonly <- majors[c(T,T,F,F,T)];econonly
names[econonly];gender[econonly]
ecofemaleonly <- gender[c(1,2)]
names[econonly][c(1,2)]
Sys.setlocale(category = "LC_ALL", locale = "cht")
econonly <- majors[c(T,T,F,F,T)];econonly
names[econonly];gender[econonly]
ecofemaleonly <- gender[c(1,2)]
names[econonly][c(1,2)]
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
library(lubridate)
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
library(rematch)
install.packages("readr")
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
install.packages(c("lubridate"))
install.packages(c("lubridate"))
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
install.packages(c("lubridate"))
install.packages(c("lubridate"))
install.packages(c("lubridate"))
# two_times
two_time <- c(
ymd_hms("西元2019年4月12日 12點55分30秒",tz="Asia/Taipei"),
dmy_hms("18.11.2018 15:33:02",tz="Europe/Oslo"))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# two_times
two_time <- c(
ymd_hms("西元2019年4月12日 12點55分30秒",tz="Asia/Taipei"),
dmy_hms("18.11.2018 15:33:02",tz="Europe/Oslo"))
# two_times
two_time <- c(
ymd_hms("西元2019年4月12日 12點55分30秒",tz="Asia/Taipei"),
dmy_hms("18.11.2018 15:33:02",tz="Europe/Oslo"))
Sys.setlocale(category = "LC_ALL", locale = "cht")
# two_times
two_time <- c(
ymd_hms("西元2019年4月12日 12點55分30秒",tz="Asia/Taipei"),
dmy_hms("18.11.2018 15:33:02",tz="Europe/Oslo"))
# two_times
library(lubridate)
two_time <- c(
ymd_hms("西元2019年4月12日 12點55分30秒",tz="Asia/Taipei"),
dmy_hms("18.11.2018 15:33:02",tz="Europe/Oslo"))
# two_times
library(lubridate)
two_time <- c(
ymd_hms("西元2019年4月12日 12點55分30秒",tz="Asia/Taipei"),
dmy_hms("18.11.2018 15:33:02",tz="Europe/Oslo"))
two_time
# two_times_chicago
two_times_chicago <- ("two_times",tz="America/Chicago")
# two_times_chicago
two_times_chicago <- c("two_times",tz="America/Chicago")
# two_times_chicago
two_times_chicago <- c("two_times",tz="America/Chicago")
# two_times_chicago
two_times_chicago <- c("two_times",tz="America/Chicago")
two_times_chicago
# two_times_chicago
two_times_chicago <- with_tz(two_time,tz ="America/Chicago")
# two_times_chicago
two_times_chicago <- with_tz(two_time,tz="America/Chicago")
# two_times_chicago
two_times_chicago <- with_tz(two_time,tzone="America/Chicago")
# two_times_chicago
two_times_chicago <- with_tz(two_time,tzone="America/Chicago")
# two_times_chicago
two_times_chicago <- with_tz(two_time,tzone="America/Chicago")
two_times_chicago
# two_times_chicago
two_times_chicago <- with_tz(two_time,tzone="America/Chicago")
two_times_chicago
# course
course <- list(`approve`="logi TRUE",
`course_info` <- list(
`course_info`="會計學",`type`="必",`credits`="3",
`time_place` <- list(`weekday`="星期三",`time_slots`=c(7,8,9),`time_slots`="商2F05")))
str(course)
# course
course <- list(`approve`="logi TRUE",
`course_info` <- list(
`coursename`="會計學",`type`="必",`credits`="3",
`time_place` <- list(`weekday`="星期三",`time_slots`=c(7,8,9),`time_slots`="商2F05")))
str(course)
# course
course <- list(`approve`="logi TRUE",
`course_info` <- list(
`coursename`="會計學",`type`="必",`credits`="3",
`time_place` <- list(`weekday`="星期三",`time_slots`=c(7,8,9),`classroom `="商2F05")))
str(course)
Sys.setlocale(category = "LC_ALL", locale = "cht")
# course
course <- list(`approve`="logi TRUE",
`course_info` <- list(
`coursename`="會計學",`type`="必",`credits`="3",
`time_place` <- list(`weekday`="星期三",`time_slots`=c(7,8,9),`classroom `="商2F05")))
str(course)
# course
course <- list(`approve`="logi TRUE",
`course_info` = list(
`coursename`="會計學",`type`="必",`credits`="3",
`time_place` =list(`weekday`="星期三",`time_slots`=c(7,8,9),`classroom `="商2F05")))
str(course)
# course
course <- list(`approve`=TRUE,
`course_info` = list(
`coursename`="會計學",`type`="必",`credits`="3",
`time_place` =list(`weekday`="星期三",`time_slots`=c(7,8,9),`classroom `="商2F05")))
str(course)
# course
course <- list(approve=TRUE,
course_info = list(
coursename="會計學",type="必",credits="3",
time_place=list(weekday="星期三",time_slots=c(7,8,9),
classroom ="商2F05")))
str(course)
# course
course <- list(approve=TRUE,
course_info = list(
coursename="會計學",type="必",credits="3",
time_place=list(list(weekday="星期三",time_slots=c(7,8,9),
classroom ="商2F05"))))
str(course)
# courseUpdate
courseUpdate <- list(approve=TRUE,
course_info = list(
coursename="會計學",type="必",credits="3",
time_place=list(list(weekday=c("星期三","星期二"),time_slots= list(c(7,8),5,
classroom ="商2F05"))))
# courseUpdate
courseUpdate <- list(approve=TRUE,
course_info = list(
coursename="會計學",type="必",credits="3",
time_place=list(list(weekday=c("星期三","星期二"),time_slots= list(c(7,8),5),
classroom ="商2F05"))))
# courseUpdate
courseUpdate <- list(approve=TRUE,
course_info = list(
coursename="會計學",type="必",credits="3",
time_place=list(list(weekday=c("星期三","星期二"),time_slots= list(c(7,8),5),
classroom ="商2F05"))))
str(courseUpdate)
# courseUpdate
courseUpdate <- list(approve=TRUE,
course_info = list(
coursename="會計學",type="必",credits="3",
time_place=list(list(weekday=c("星期三","星期二"),time_slots= c(c(7,8),5),
classroom ="商2F05"))))
str(courseUpdate)
# courseUpdate
courseUpdate <- list(approve=TRUE,
course_info = list(
coursename="會計學",type="必",credits="3",
time_place=list(list(weekday=c("星期三","星期二"),time_slots= c("7 8節","5"),
classroom ="商2F05"))))
str(courseUpdate)
# courseUpdate
courseUpdate <- list(approve=TRUE,
course_info = list(
coursename="會計學",type="必",credits="3",
time_place=list(list(weekday=c("星期三","星期二"),time_slots= c("7 8","5"),
classroom ="商2F05"))))
str(courseUpdate)
# courseUpdate
courseUpdate <- list(approve=TRUE,
course_info = list(
coursename="會計學",type="必",credits="3",
time_place=list(list(weekday=c("星期三"),time_slots= 7 8 ,classroom ="商2F05"),list(weekday=c("星期二"),time_slots=5,classroom ="商2F05"))))
# courseUpdate
courseUpdate <- list(approve=TRUE,
course_info = list(
coursename="會計學",type="必",credits="3",
time_place=list(list(weekday=c("星期三"),time_slots= c(7,8) ,classroom ="商2F05"),list(weekday=c("星期二"),time_slots=c(5),classroom ="商2F05"))))
str(courseUpdate)
# accidents
accidents <- list(time=ymd("103,1,1"),bureaus=list(`板橋分局`=list(type="駕駛人過失-其他",casualties=c(1),`海山分局`=list(
type="駕駛人過失-搶越行人穿越道",casualties=c(1)))))
# accidents
accidents <- list(
time=ymd("103,1,1"),
bureaus=list(`板橋分局`=list(type="駕駛人過失-其他",casualties              =c(1),
`海山分局`=list(type="駕駛人過失-搶越行人穿越道",              casualties=c(1)))))
str(accidents)
# accidents
accidents <- list(
time=ymd("2014,1,1"),
bureaus=list(`板橋分局`=list(type="駕駛人過失-其他",casualties              =c(1)),
`海山分局`=list(type="駕駛人過失-搶越行人穿越道",              casualties=c(1)))
))
# accidents
accidents <- list(
time=ymd("2014,1,1"),
bureaus=list(`板橋分局`=list(type="駕駛人過失-其他",casualties              =c(1)),
`海山分局`=list(type="駕駛人過失-搶越行人穿越道",              casualties=c(1))
)))
# accidents
accidents <- list(
time=ymd("2014,1,1"),
bureaus=list(`板橋分局`=list(type="駕駛人過失-其他",casualties              =c(1)),
`海山分局`=list(type="駕駛人過失-搶越行人穿越道",              casualties=c(1))
))
str(accidents)
source("https://www.dropbox.com/s/bvs0m4oxw7yaqxw/108-2-hw1-3.R?dl=1")
fiveReceipts <- .randomReceipts(n=5)
# accidents
accidents <- list(
time=ymd("2014,1,1"),
bureaus=list(`板橋分局`=list(type="駕駛人過失-其他",casualties              =1),
`海山分局`=list(type="駕駛人過失-搶越行人穿越道",              casualties=1)
))
str(accidents)
# courseUpdate
courseUpdate <- list(approve=TRUE,
course_info = list(
coursename="會計學",type="必",credits="3",time_place=list(list(weekday=c("星期三"),time_slots= c(7,8) ,classroom ="商2F05"),list(weekday=c("星期二"),time_slots=c(5),classroom ="商2F05"))))
str(courseUpdate)
# courseUpdate
courseUpdate <- list(approve=TRUE,
course_info = list(coursename="會計學",type="必",credits="3",
time_place=list(list(weekday=c("星期三"),time_slots= c(7,8) ,classroom ="商2F05"),list(weekday=c("星期二"),time_slots=c(5),classroom ="商2F05"))))
str(courseUpdate)
View(course_info)
# levels_fiveReceipts
levels_fiveReceipts = levels(fiveReceipts)
# levels_fiveReceipts
levels_fiveReceipts = levels(fiveReceipts)
levels_fiveReceipts
# storage_fiveReceipts
storage_fiveReceipts = as.integer(levels_fiveReceipts)
# storage_fiveReceipts
storage_fiveReceipts = as.integer(levels_fiveReceipts)
# levels_fiveReceipts
levels_fiveReceipts <- levels(fiveReceipts)
levels_fiveReceipts
# storage_fiveReceipts
storage_fiveReceipts <- as.integer(levels_fiveReceipts)
storage_fiveReceipts
# chr_fiveReceipts
chr_fiveReceipts <- as.character(levels_fiveReceipts)
# chr_fiveReceipts
chr_fiveReceipts <- as.character(levels_fiveReceipts)
chr_fiveReceipts
# sum_fiveReceipts
sum_fiveReceipts <- sum(as.integer(levels_fiveReceipts))
sum_fiveReceipts
# sum_fiveReceipts
sum_fiveReceipts <- sum(as.integer(levels_fiveReceipts))
sum_fiveReceipts
